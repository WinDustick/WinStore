services:
  # --- MS SQL Server Database ---
  db:
    image: mcr.microsoft.com/mssql/server:latest
    container_name: winstore_mssql
    restart: unless-stopped
    environment:
      ACCEPT_EULA: "Y"
      MSSQL_SA_PASSWORD: ${MSSQL_PASSWORD}
      MSSQL_PID: Express
    ports:
      - "1433:1433"
    volumes:
      - sql_server_data:/var/opt/mssql
      - ./scripts:/scripts
    networks:
      - winstore_network
    healthcheck:
      test: /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P ${MSSQL_PASSWORD} -Q "SELECT 1" -b -o /dev/null
      interval: 10s
      timeout: 5s
      retries: 5

  # --- Django Backend ---
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: winstore_backend
    restart: unless-stopped
    depends_on:
      - db
    environment:
      - DB_HOST=db
      - DB_PORT=1433
      - DB_NAME=WinStore
      - DB_USER=sa
      - DB_PASSWORD=${MSSQL_PASSWORD}
      - SECRET_KEY=${SECRET_KEY:-django-insecure-default-key-change-me}
      - DEBUG=${DEBUG:-True}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-localhost,127.0.0.1}
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/mediafiles
    networks:
      - winstore_network
    command: >
      bash -c "python wait_for_db.py &&
               python manage.py migrate &&
               python manage.py collectstatic --noinput &&
               python manage.py runserver 0.0.0.0:8000"

  # --- Directus CMS ---
  directus:
    image: directus/directus:latest
    container_name: winstore_directus
    restart: unless-stopped
    ports:
      - "8055:8055"
    environment:
      KEY: ${DIRECTUS_KEY} 
      SECRET: ${DIRECTUS_SECRET}
      DB_CLIENT: "mssql"
      DB_HOST: "db"
      DB_PORT: "1433"
      DB_DATABASE: "WinStore"
      DB_USER: "sa"
      DB_PASSWORD: ${MSSQL_PASSWORD}
      ADMIN_EMAIL: ${DIRECTUS_ADMIN_EMAIL}
      ADMIN_PASSWORD: ${DIRECTUS_ADMIN_PASSWORD}
      PUBLIC_URL: ${DIRECTUS_PUBLIC_URL:-http://localhost:8055}
    volumes:
      - directus_uploads:/directus/uploads
      - directus_extensions:/directus/extensions
    depends_on:
      - db
    networks:
      - winstore_network

  # --- Nginx Web Server ---
  nginx:
    image: nginx:alpine
    container_name: winstore_nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./frontend:/usr/share/nginx/html
      - static_volume:/var/www/static
      - media_volume:/var/www/media
    depends_on:
      - backend
      - directus
    networks:
      - winstore_network

volumes:
  sql_server_data:
    driver: local
  static_volume:
    driver: local
  media_volume:
    driver: local
  directus_uploads:
    driver: local
  directus_extensions:
    driver: local

networks:
  winstore_network:
    driver: bridge
